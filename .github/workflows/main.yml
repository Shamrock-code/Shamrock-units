name: Linux ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  make_documentation:
    name: "Build : Documentation"

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: pip install packages
        run: pip install -U jupyter-book sphinx_proof matplotlib numpy

      - name : Install pck (doxygen)
        run: |
          sudo apt-get install -y -qq doxygen graphviz

      - name: Gen doc
        run: |
          cd doc
          sh make_doc.sh

      - name: 'Tar doc'
        run: tar -cvf documentation.tar.gz doc/_build

      - name: Archive generated doc
        uses: actions/upload-artifact@v3
        with:
          name: shamrock_documentation
          path: documentation.tar.gz

  upload_doc:

    if: github.ref == 'refs/heads/main'
    needs: [make_documentation]

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write


    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: 'Download Doc'
        uses: actions/download-artifact@v3
        with:
          name: shamrock_documentation

      - name: ls local
        run : ls -la

      - name: 'Extract Doc'
        run: |
          tar -xvf documentation.tar.gz

      - name: ls local
        run : ls -la

      - name: 'Clean Files'
        run: |
          rm documentation.tar.gz
          mv doc/_build/* .
          rm -r doc

      #- name: 'Delete Doxygen'
      #  run: rm -rf doxygen
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1



  deploy_page:

    if: github.ref == 'refs/heads/main'

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: upload_doc
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
